digraph grammar {
	graph [bgcolor=aliceblue rankdir=TB]
	"int i = 0 " [color=blue fontcolor=blue]
	beginCode -> "int i = 0 "
	"for (i<3)" [color=purple fontcolor=purple]
	"int i = 0 " -> "for (i<3)"
	" i = i+1" [color=green fontcolor=green]
	" i = i+1" -> "for (i<3)"
	"while (x<8)" [color=purple fontcolor=purple]
	"for (i<3)" -> "while (x<8)"
	" k = \"coisas\"" [color=green fontcolor=green]
	"while (x<8)" -> " k = \"coisas\""
	" k = \"coisas\"" -> "while (x<8)"
	"if (k<3)" [color=red fontcolor=red shape=diamond]
	"while (x<8)" -> "if (k<3)"
	"if (m==9)" [color=red fontcolor=red shape=diamond]
	"if (k<3)" -> "if (m==9)"
	DO [color=purple fontcolor=purple]
	"if (m==9)" -> DO
	"int m = 0 " [color=blue fontcolor=blue]
	DO -> "int m = 0 "
	"while(x<2)" [color=purple fontcolor=purple]
	"int m = 0 " -> "while(x<2)"
	"while(x<2)" -> DO
	endif2 [color=red fontcolor=red shape=diamond]
	DO -> endif2
	"if (m==9)" -> endif2
	endif1 [color=red fontcolor=red shape=diamond]
	endif2 -> endif1
	"if (k<3)" -> endif1
	"print(\"ei\")" [color=brown fontcolor=brown]
	endif1 -> "print(\"ei\")"
	"int k = 0 " [color=blue fontcolor=blue]
	"print(\"ei\")" -> "int k = 0 "
	"int k = 0 " -> " i = i+1"
	"for (i<3)" -> endCode
}
